<SCENE_VISION_STORYBOARD_PLAN>
[SCENE_VISION]
1.  **Scene Overview**:
    - This scene introduces the derivative as a fundamental concept in calculus, emphasizing its significance in determining the slope of a function at a specific point. The key takeaway is to understand that the derivative represents the rate of change of a function, visually interpreted as the slope of a tangent line at a given point on a graph.
    - **Visual learning objectives for viewers:** Use an `Axes` object to depict the graph of a linear function, `Line` objects to illustrate slopes, and `MathTex` for the derivative notation. Visualize the slope as a right triangle using three `Polygon` objects to clearly show the rise over run concept.
    - The Manim visuals support learning by providing a clear graphical representation of the slope and derivative concepts. The `Axes` will be positioned on the left, while the title will be on the right, ensuring proper spacing and clarity. Use `VGroup` to group related elements like the slope triangle for easier animation and spatial control, while maintaining a minimum spacing of 0.3 units between all objects.

[STORYBOARD]
1.  **Visual Flow & Pacing (Manim Animation Sequence)**:
    - **Sub-scene 1: Introduction of Axes and Graph**
        - **Visual Element**: `Axes` object representing the coordinate system.
        - **Animation Sequence**: 
            - Create the `Axes` object with `Create(axes, run_time=2)`.
            - Plot a linear function (e.g., \( y = 2x + 1 \)) using `Plot`, with a `Color` of BLUE and a `stroke_width=2`. Position it to the right of the axes, ensuring a minimum of 0.3 units spacing.
            - Use `Create(line_graph, run_time=2)` to animate the graph's appearance.
            - Wait for 1 second (`Wait(1)`).
        
    - **Sub-scene 2: Title Introduction**
        - **Visual Element**: Title text "What is a Derivative?" using `Tex`.
        - **Animation Sequence**: 
            - Create the title positioned on the right side of the scene, ensuring it is at least 0.3 units away from the axes. Use `title.next_to(axes, RIGHT, buff=0.3)`.
            - Animate the title's entrance using `Write(title, run_time=2)`.
            - Wait for 1 second (`Wait(1)`).

    - **Sub-scene 3: Slope Visualization**
        - **Visual Element**: Use `Polygon` to create a right triangle representing the slope (rise/run).
        - **Animation Sequence**:
            - Position the triangle relative to the graph, ensuring it is at least 0.3 units from the graph and the title. Use `triangle.move_to(...)` with appropriate offsets.
            - Create the triangle using `Create(triangle, run_time=2)`.
            - Use arrows (`Arrow` class) to highlight the rise and run components, ensuring they maintain a 0.3 unit spacing from the triangle.
            - Animate the arrows with `Create(arrow_rise, run_time=1)` and `Create(arrow_run, run_time=1)`.
            - Wait for 1 second (`Wait(1)`).

    - **Sub-scene 4: Derivative Notation**
        - **Visual Element**: `MathTex` to display the notation for the derivative, e.g., \( f'(x) \).
        - **Animation Sequence**: 
            - Position the derivative notation below the slope visualization, ensuring 0.3 unit spacing from the triangle and other elements.
            - Use `Write(derivative_notation, run_time=2)`.
            - Conclude with a brief pause (`Wait(1)`), allowing viewers to absorb the content.

</SCENE_VISION_STORYBOARD_PLAN>