<SCENE_OUTLINE>
    <SCENE_1>
    Scene Title: Introduction to Variables
    Scene Purpose: Introduce the concept of variables in programming; set the stage for the importance of variables in Python.
    Scene Description: The scene opens with a definition of variables. A simple analogy comparing variables to containers is presented, illustrating how they store data. The visual will include an animated container filling up with different types of data.
    Scene Layout: The container is centered in the middle of the scene, with text definitions appearing above it. The safe area margins are respected with the container positioned 0.5 units inward from all edges. Text is spaced 0.3 units above the container. 
    </SCENE_1>

    <SCENE_2>
    Scene Title: Creating Variables
    Scene Purpose: Teach how to create variables in Python using syntax examples.
    Scene Description: This scene demonstrates the syntax for declaring variables in Python. The example `name = 'Alice'` animates on screen, highlighting each component (variable name, assignment operator, and value). The scene explains naming conventions for variables.
    Scene Layout: The text "name = 'Alice'" is displayed prominently in the center. Each component (name, '=', 'Alice') is animated sequentially with a 0.3 unit spacing between them. The safe area margins are maintained, with text starting 0.5 units from the top edge. 
    </SCENE_2>

    <SCENE_3>
    Scene Title: Variable Types
    Scene Purpose: Explain different data types associated with variables in Python.
    Scene Description: This scene introduces the concept of data types (strings, integers, booleans) using the examples provided. Each type is demonstrated with a visual representation, like a string in quotes, a number, and a checkbox for booleans.
    Scene Layout: Three sections are created within the scene, each representing a data type. The string is on the left, the integer in the center, and the boolean on the right, with a minimum spacing of 0.3 units between each. Each section is 0.5 units from the edge of the scene.
    </SCENE_3>

    <SCENE_4>
    Scene Title: Using Variables
    Scene Purpose: Show how to use variables in expressions and print statements.
    Scene Description: This scene illustrates how to use variables in expressions, showcasing a print statement example: `print(name)`. The output of the print statement animates to show "Alice" appearing on the screen.
    Scene Layout: The print statement is centered, with the output animating below it. The text components are spaced 0.3 units apart, maintaining the safe area margins of 0.5 units from the edges.
    </SCENE_4>

    <SCENE_5>
    Scene Title: Updating Variables
    Scene Purpose: Demonstrate how variables can be updated or reassigned.
    Scene Description: This scene shows the reassignment of the variable `age` from `25` to `26`. The animation illustrates the previous value being replaced with the new value, emphasizing the dynamic nature of variables.
    Scene Layout: A two-part layout where the initial value of `age` is on the left and the updated value on the right. There should be a minimum of 0.3 units between the two parts, with both positioned 0.5 units from the edges of the scene.
    </SCENE_5>

    <SCENE_6>
    Scene Title: Variable Scope
    Scene Purpose: Introduce the concept of variable scope (local vs global).
    Scene Description: This scene explains the difference between local and global variables using simple code snippets. An example function is shown with a local variable, and a global variable is defined outside the function.
    Scene Layout: The code snippets are displayed on the left and right sides of the screen, with a visual distinction (e.g., colors) to differentiate local and global variables. They are spaced 0.3 units apart and positioned within the safe area margins.
    </SCENE_6>

    <SCENE_7>
    Scene Title: Recap and Conclusion
    Scene Purpose: Summarize key points covered in the video about Python variables.
    Scene Description: The final scene revisits the main concepts: creation, types, usage, updating, and scope of variables. Key points appear as bullet points with brief explanations.
    Scene Layout: The summary bullet points are centered, with each point having 0.3 units of space between them. The entire layout is kept 0.5 units away from the edges of the scene to maintain clarity and focus.
    </SCENE_7>
</SCENE_OUTLINE>